Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> COMIENZA instrucciones FIN
Rule 2     programa -> COMIENZA FIN
Rule 3     instrucciones -> instruccion instrucciones
Rule 4     instrucciones -> instruccion
Rule 5     instruccion -> NORTE
Rule 6     instruccion -> SUR
Rule 7     instruccion -> ESTE
Rule 8     instruccion -> OESTE

Terminals, with rules where they appear

COMIENZA             : 1 2
ESTE                 : 7
FIN                  : 1 2
NORTE                : 5
OESTE                : 8
SUR                  : 6
error                : 

Nonterminals, with rules where they appear

instruccion          : 3 4
instrucciones        : 1 3
programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . COMIENZA instrucciones FIN
    (2) programa -> . COMIENZA FIN

    COMIENZA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> COMIENZA . instrucciones FIN
    (2) programa -> COMIENZA . FIN
    (3) instrucciones -> . instruccion instrucciones
    (4) instrucciones -> . instruccion
    (5) instruccion -> . NORTE
    (6) instruccion -> . SUR
    (7) instruccion -> . ESTE
    (8) instruccion -> . OESTE

    FIN             shift and go to state 4
    NORTE           shift and go to state 6
    SUR             shift and go to state 7
    ESTE            shift and go to state 8
    OESTE           shift and go to state 9

    instrucciones                  shift and go to state 3
    instruccion                    shift and go to state 5

state 3

    (1) programa -> COMIENZA instrucciones . FIN

    FIN             shift and go to state 10


state 4

    (2) programa -> COMIENZA FIN .

    $end            reduce using rule 2 (programa -> COMIENZA FIN .)


state 5

    (3) instrucciones -> instruccion . instrucciones
    (4) instrucciones -> instruccion .
    (3) instrucciones -> . instruccion instrucciones
    (4) instrucciones -> . instruccion
    (5) instruccion -> . NORTE
    (6) instruccion -> . SUR
    (7) instruccion -> . ESTE
    (8) instruccion -> . OESTE

    FIN             reduce using rule 4 (instrucciones -> instruccion .)
    NORTE           shift and go to state 6
    SUR             shift and go to state 7
    ESTE            shift and go to state 8
    OESTE           shift and go to state 9

    instruccion                    shift and go to state 5
    instrucciones                  shift and go to state 11

state 6

    (5) instruccion -> NORTE .

    NORTE           reduce using rule 5 (instruccion -> NORTE .)
    SUR             reduce using rule 5 (instruccion -> NORTE .)
    ESTE            reduce using rule 5 (instruccion -> NORTE .)
    OESTE           reduce using rule 5 (instruccion -> NORTE .)
    FIN             reduce using rule 5 (instruccion -> NORTE .)


state 7

    (6) instruccion -> SUR .

    NORTE           reduce using rule 6 (instruccion -> SUR .)
    SUR             reduce using rule 6 (instruccion -> SUR .)
    ESTE            reduce using rule 6 (instruccion -> SUR .)
    OESTE           reduce using rule 6 (instruccion -> SUR .)
    FIN             reduce using rule 6 (instruccion -> SUR .)


state 8

    (7) instruccion -> ESTE .

    NORTE           reduce using rule 7 (instruccion -> ESTE .)
    SUR             reduce using rule 7 (instruccion -> ESTE .)
    ESTE            reduce using rule 7 (instruccion -> ESTE .)
    OESTE           reduce using rule 7 (instruccion -> ESTE .)
    FIN             reduce using rule 7 (instruccion -> ESTE .)


state 9

    (8) instruccion -> OESTE .

    NORTE           reduce using rule 8 (instruccion -> OESTE .)
    SUR             reduce using rule 8 (instruccion -> OESTE .)
    ESTE            reduce using rule 8 (instruccion -> OESTE .)
    OESTE           reduce using rule 8 (instruccion -> OESTE .)
    FIN             reduce using rule 8 (instruccion -> OESTE .)


state 10

    (1) programa -> COMIENZA instrucciones FIN .

    $end            reduce using rule 1 (programa -> COMIENZA instrucciones FIN .)


state 11

    (3) instrucciones -> instruccion instrucciones .

    FIN             reduce using rule 3 (instrucciones -> instruccion instrucciones .)

